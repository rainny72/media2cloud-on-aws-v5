{
  "Comment": "Ingest Fixity state machine auto restores s3 object from GLAICER or DEEP_ARCHIVE and to run checksum",
  "StartAt": "Check restore status",
  "States": {
    "Check restore status": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-ingest-fixity",
        "Payload": {
          "operation": "StateCheckRestoreStatus",
          "uuid.$": "$.uuid",
          "status.$": "$.status",
          "progress.$": "$.progress",
          "input.$": "$.input",
          "data.$": "$.data"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 4,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Restore completed?"
    },
    "Restore completed?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "COMPLETED",
          "Next": "Run fixity check?"
        }
      ],
      "Default": "Wait X mins/hours"
    },
    "Wait X mins/hours": {
      "Type": "Wait",
      "SecondsPath": "$.data.restore.waitInSeconds",
      "Next": "Check restore status"
    },
    "Run fixity check?": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.input.qcOptions",
              "IsPresent": true
            },
            {
              "Variable": "$.input.qcOptions.fixityCheck",
              "IsPresent": true
            },
            {
              "Variable": "$.input.qcOptions.fixityCheck",
              "BooleanEquals": true
            }
          ],
          "Next": "Compute checksum"
        }
      ],
      "Default": "Fixity check completed"
    },
    "Compute checksum": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-ingest-fixity",
        "Payload": {
          "operation": "StateComputeChecksum",
          "uuid.$": "$.uuid",
          "status.$": "$.status",
          "progress.$": "$.progress",
          "input.$": "$.input",
          "data.$": "$.data"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 4,
          "BackoffRate": 1.2
        }
      ],
      "Next": "More data?"
    },
    "More data?": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.status",
          "StringEquals": "COMPLETED",
          "Next": "Fixity check completed"
        }
      ],
      "Default": "Compute checksum"
    },
    "Fixity check completed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-ingest-fixity",
        "Payload": {
          "operation": "StateValidateChecksum",
          "uuid.$": "$.uuid",
          "status": "NOT_STARTED",
          "progress": 0,
          "input.$": "$.input",
          "data.$": "$.data"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 4,
          "BackoffRate": 1.2
        }
      ],
      "End": true
    }
  }
}