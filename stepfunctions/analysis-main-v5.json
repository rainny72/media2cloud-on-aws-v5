{
  "StartAt": "Prepare analysis",
  "States": {
    "Prepare analysis": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-main",
        "Payload": {
          "operation": "prepare-analysis",
          "stateExecution.$": "$$.Execution"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Map processing"
    },
    "Map processing": {
      "Type": "Map",
      "MaxConcurrency": 4,
      "ItemsPath": "$.data.iterators",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Run media analysis state machine by type",
        "States": {
          "Run media analysis state machine by type": {
            "Type": "Task",
            "Resource": "arn:aws:states:::states:startExecution.sync:2",
            "Parameters": {
              "StateMachineArn.$": "$.analysisStateMachineArn",
              "Input.$": "$"
            },
            "OutputPath": "$.Output",
            "End": true
          }
        }
      },
      "ResultPath": "$.data.iterators",
      "Next": "Collect analysis results"
    },
    "Collect analysis results": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-main",
        "Payload": {
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data",
          "operation": "collect-analysis-results",
          "status": "NOT_STARTED",
          "progress": 0
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Run analysis post process?"
    },
    "Run analysis post process?": {
      "Type": "Choice",
      "Choices": [
        {
          "Or": [
            {
              "And": [
                {
                  "Variable": "$.input.video",
                  "IsPresent": true
                },
                {
                  "Variable": "$.input.video.enabled",
                  "BooleanEquals": true
                }
              ]
            },
            {
              "And": [
                {
                  "Variable": "$.input.audio",
                  "IsPresent": true
                },
                {
                  "Variable": "$.input.audio.enabled",
                  "BooleanEquals": true
                }
              ]
            }
          ],
          "Next": "Run analysis post process and wait"
        }
      ],
      "Default": "Analysis completed"
    },
    "Run analysis post process and wait": {
      "Type": "Task",
      "Resource": "arn:aws:states:::states:startExecution.sync:2",
      "Parameters": {
        "StateMachineArn": "arn:aws:states:us-west-2:189427507247:stateMachine:so0050-0a48a6e54829-analysis-post-process",
        "Input.$": "$"
      },
      "OutputPath": "$.Output",
      "Next": "Analysis completed"
    },
    "Analysis completed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-main",
        "Payload": {
          "operation": "job-completed",
          "uuid.$": "$.uuid",
          "status": "NOT_STARTED",
          "progress": 0,
          "input.$": "$.input",
          "data.$": "$.data"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "End": true
    }
  }
}