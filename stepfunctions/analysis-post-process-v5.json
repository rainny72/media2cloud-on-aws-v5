{
  "Comment": "Analysis post processing state machine. Run analysis that requires a combination of the generated metadata.",
  "StartAt": "Merge scenes and audio segments",
  "States": {
    "Merge scenes and audio segments": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
        "Payload": {
          "operation": "StateMergeScenesAudioSegments",
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data",
          "status": "NOT_STARTED",
          "progress": 0
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Map sequence image iterations"
    },
    "Map sequence image iterations": {
      "Type": "Map",
      "MaxConcurrency": 10,
      "ItemsPath": "$.data.iterators",
      "ItemSelector": {
        "operation": "StateCreateSequenceImages",
        "itemId.$": "$$.Map.Item.Index",
        "itemData.$": "$$.Map.Item.Value"
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Create scene sequence images",
        "States": {
          "Create scene sequence images": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "End": true
          }
        }
      },
      "ResultPath": "$.data.iterators",
      "Next": "Update scene shot results"
    },
    "Update scene shot results": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
        "Payload": {
          "operation": "StateUpdateSceneShotResults",
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data",
          "status": "NOT_STARTED"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Parallel processing"
    },
    "Parallel processing": {
      "Type": "Parallel",
      "Branches": [
        {
          "StartAt": "Identify scene segment type",
          "States": {
            "Identify scene segment type": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                "Payload": {
                  "operation": "StateSceneSegmentType",
                  "uuid.$": "$.uuid",
                  "input.$": "$.input",
                  "data.$": "$.data"
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "AccessDeniedException",
                    "ResourceNotFoundException",
                    "ValidationException"
                  ],
                  "MaxAttempts": 0
                },
                {
                  "ErrorEquals": [
                    "InternalServerException",
                    "ModelErrorException",
                    "ModelNotReadyException",
                    "ModelTimeoutException",
                    "ServiceQuotaExceededException",
                    "ThrottlingException",
                    "ServiceUnavailableException"
                  ],
                  "IntervalSeconds": 60,
                  "MaxAttempts": 40,
                  "BackoffRate": 1.1
                },
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 4,
                  "BackoffRate": 1.2
                }
              ],
              "Next": "More scene segments?"
            },
            "More scene segments?": {
              "Type": "Choice",
              "Choices": [
                {
                  "Variable": "$.status",
                  "StringEquals": "COMPLETED",
                  "Next": "Create segment events"
                }
              ],
              "Default": "Identify scene segment type"
            },
            "Create segment events": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                "Payload": {
                  "operation": "StateCreateSegmentEvents",
                  "uuid.$": "$.uuid",
                  "input.$": "$.input",
                  "data.$": "$.data",
                  "status": "NOT_STARTED",
                  "progress": 0
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "AccessDeniedException",
                    "ResourceNotFoundException",
                    "ValidationException"
                  ],
                  "MaxAttempts": 0
                },
                {
                  "ErrorEquals": [
                    "InternalServerException",
                    "ModelErrorException",
                    "ModelNotReadyException",
                    "ModelTimeoutException",
                    "ServiceQuotaExceededException",
                    "ThrottlingException",
                    "ServiceUnavailableException"
                  ],
                  "IntervalSeconds": 60,
                  "MaxAttempts": 40,
                  "BackoffRate": 1.1
                },
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 4,
                  "BackoffRate": 1.2
                }
              ],
              "Next": "Generate ad breaks (with shots)"
            },
            "Generate ad breaks (with shots)": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                "Payload": {
                  "operation": "StateGenerateAdBreaks",
                  "uuid.$": "$.uuid",
                  "input.$": "$.input",
                  "data.$": "$.data",
                  "status": "NOT_STARTED",
                  "progress": 0
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 2,
                  "BackoffRate": 1.2
                }
              ],
              "End": true
            }
          }
        },
        {
          "StartAt": "scenes to chapters",
          "States": {
            "scenes to chapters": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                "Payload": {
                  "operation": "StateScenesToChapters",
                  "uuid.$": "$.uuid",
                  "input.$": "$.input",
                  "data.$": "$.data",
                  "status": "NOT_STARTED",
                  "progress": 0
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 2,
                  "BackoffRate": 1.2
                }
              ],
              "Next": "Map iterations"
            },
            "Map iterations": {
              "Type": "Map",
              "MaxConcurrency": 10,
              "ItemsPath": "$.data.iterators",
              "ItemSelector": {
                "operation": "StateCreateChapterSequences",
                "itemId.$": "$$.Map.Item.Index",
                "itemData.$": "$$.Map.Item.Value"
              },
              "ItemProcessor": {
                "ProcessorConfig": {
                  "Mode": "INLINE"
                },
                "StartAt": "Create chapter sequences (iterator)",
                "States": {
                  "Create chapter sequences (iterator)": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::lambda:invoke",
                    "OutputPath": "$.Payload",
                    "Parameters": {
                      "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                      "Payload.$": "$"
                    },
                    "Retry": [
                      {
                        "ErrorEquals": [
                          "Lambda.ServiceException",
                          "Lambda.AWSLambdaException",
                          "Lambda.SdkClientException",
                          "Lambda.TooManyRequestsException"
                        ],
                        "IntervalSeconds": 1,
                        "MaxAttempts": 2,
                        "BackoffRate": 1.2
                      }
                    ],
                    "End": true
                  }
                }
              },
              "ResultPath": "$.data.iterators",
              "Next": "Map iterations completed"
            },
            "Map iterations completed": {
              "Type": "Task",
              "Resource": "arn:aws:states:::lambda:invoke",
              "OutputPath": "$.Payload",
              "Parameters": {
                "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
                "Payload": {
                  "operation": "StateMapIterationCompleted",
                  "uuid.$": "$.uuid",
                  "input.$": "$.input",
                  "data.$": "$.data",
                  "status": "NOT_STARTED"
                }
              },
              "Retry": [
                {
                  "ErrorEquals": [
                    "Lambda.ServiceException",
                    "Lambda.AWSLambdaException",
                    "Lambda.SdkClientException",
                    "Lambda.TooManyRequestsException"
                  ],
                  "IntervalSeconds": 1,
                  "MaxAttempts": 2,
                  "BackoffRate": 1.2
                }
              ],
              "End": true
            }
          }
        }
      ],
      "Next": "Post analysis completed"
    },
    "Post analysis completed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-analysis-post-process",
        "Payload": {
          "operation": "StateJobCompleted",
          "stateExecution.$": "$$.Execution",
          "parallelStateOutputs.$": "$"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "End": true
    }
  }
}