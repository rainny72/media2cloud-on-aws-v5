{
  "Comment": "Frame extraction state machine extracts frames from video, computes frame properties, and generates frame embeddings with Amazon Titan Multimodal Embeddings model.",
  "StartAt": "Prepare iterators",
  "States": {
    "Prepare iterators": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
        "Payload": {
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data",
          "operation": "StatePrepareFrameIterators",
          "status": "NOT_STARTED",
          "progress": 0
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Map processing"
    },
    "Map processing": {
      "Type": "Map",
      "MaxConcurrency": 12,
      "ItemsPath": "$.data.iterators",
      "ItemSelector": {
        "operation": "StateExtractFrames",
        "itemId.$": "$$.Map.Item.Index",
        "itemData.$": "$$.Map.Item.Value"
      },
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Extract frames (FFmpeg)",
        "States": {
          "Extract frames (FFmpeg)": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "Next": "Compute frame properties"
          },
          "Compute frame properties": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
              "Payload": {
                "operation": "StateComputeFrameProperties",
                "itemId.$": "$.itemId",
                "itemData.$": "$.itemData"
              }
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "AccessDeniedException",
                  "ResourceNotFoundException",
                  "ValidationException"
                ],
                "MaxAttempts": 0
              },
              {
                "ErrorEquals": [
                  "InternalServerException",
                  "ModelErrorException",
                  "ModelNotReadyException",
                  "ModelTimeoutException",
                  "ServiceQuotaExceededException",
                  "ThrottlingException",
                  "ServiceUnavailableException"
                ],
                "IntervalSeconds": 60,
                "MaxAttempts": 10,
                "BackoffRate": 1.2
              },
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "Next": "More frame properties?"
          },
          "More frame properties?": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.itemData.status",
                "StringEquals": "COMPLETED",
                "Next": "Prepare shot boundary frames"
              }
            ],
            "Default": "Compute frame properties"
          },
          "Prepare shot boundary frames": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
              "Payload": {
                "operation": "StatePrepareShotBoundaryFrames",
                "itemId.$": "$.itemId",
                "itemData.$": "$.itemData"
              }
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "Next": "Extract shot boundary frames"
          },
          "Extract shot boundary frames": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
              "Payload": {
                "operation": "StateExtractShotBoundaryFrames",
                "itemId.$": "$.itemId",
                "itemData.$": "$.itemData"
              }
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "AccessDeniedException",
                  "ResourceNotFoundException",
                  "ValidationException"
                ],
                "MaxAttempts": 0
              },
              {
                "ErrorEquals": [
                  "InternalServerException",
                  "ModelErrorException",
                  "ModelNotReadyException",
                  "ModelTimeoutException",
                  "ServiceQuotaExceededException",
                  "ThrottlingException",
                  "ServiceUnavailableException"
                ],
                "IntervalSeconds": 60,
                "MaxAttempts": 10,
                "BackoffRate": 1.2
              },
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "Next": "More boundary frames?"
          },
          "More boundary frames?": {
            "Type": "Choice",
            "Choices": [
              {
                "Variable": "$.itemData.status",
                "StringEquals": "COMPLETED",
                "Next": "Iterator completed"
              }
            ],
            "Default": "Extract shot boundary frames"
          },
          "Iterator completed": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
              "Payload": {
                "operation": "StateIteratorCompleted",
                "itemId.$": "$.itemId",
                "itemData.$": "$.itemData"
              }
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 1,
                "MaxAttempts": 2,
                "BackoffRate": 1.2
              }
            ],
            "End": true
          }
        }
      },
      "ResultPath": "$.data.iterators",
      "Next": "Prepare embedding search"
    },
    "Prepare embedding search": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
        "Payload": {
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data",
          "operation": "StatePrepareEmbeddingSearch",
          "status": "NOT_STARTED"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "Next": "Map embedding search"
    },
    "Map embedding search": {
      "Type": "Map",
      "MaxConcurrency": 4,
      "ItemsPath": "$.data.iterators",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "INLINE"
        },
        "StartAt": "Search embeddings with faiss",
        "States": {
          "Search embeddings with faiss": {
            "Type": "Task",
            "Resource": "arn:aws:states:::lambda:invoke",
            "OutputPath": "$.Payload",
            "Parameters": {
              "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-search-embeddings",
              "Payload.$": "$"
            },
            "Retry": [
              {
                "ErrorEquals": [
                  "Lambda.ServiceException",
                  "Lambda.AWSLambdaException",
                  "Lambda.SdkClientException",
                  "Lambda.TooManyRequestsException"
                ],
                "IntervalSeconds": 6,
                "MaxAttempts": 6,
                "BackoffRate": 1.2
              }
            ],
            "End": true
          }
        }
      },
      "ResultPath": "$.data.iterators",
      "Next": "Frame extraction completed"
    },
    "Frame extraction completed": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "OutputPath": "$.Payload",
      "Parameters": {
        "FunctionName": "arn:aws:lambda:us-west-2:189427507247:function:so0050-0a48a6e54829-frame-extraction",
        "Payload": {
          "operation": "StateFrameExtractionCompleted",
          "uuid.$": "$.uuid",
          "input.$": "$.input",
          "data.$": "$.data"
        }
      },
      "Retry": [
        {
          "ErrorEquals": [
            "Lambda.ServiceException",
            "Lambda.AWSLambdaException",
            "Lambda.SdkClientException",
            "Lambda.TooManyRequestsException"
          ],
          "IntervalSeconds": 1,
          "MaxAttempts": 2,
          "BackoffRate": 1.2
        }
      ],
      "End": true
    }
  }
}