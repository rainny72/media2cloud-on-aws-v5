import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import { NeptuneServiceException as __BaseException } from "./NeptuneServiceException";
export interface AddRoleToDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  RoleArn: string | undefined;
  FeatureName?: string | undefined;
}
export declare class DBClusterNotFoundFault extends __BaseException {
  readonly name: "DBClusterNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterNotFoundFault, __BaseException>
  );
}
export declare class DBClusterRoleAlreadyExistsFault extends __BaseException {
  readonly name: "DBClusterRoleAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterRoleAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class DBClusterRoleQuotaExceededFault extends __BaseException {
  readonly name: "DBClusterRoleQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterRoleQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class InvalidDBClusterStateFault extends __BaseException {
  readonly name: "InvalidDBClusterStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBClusterStateFault, __BaseException>
  );
}
export interface AddSourceIdentifierToSubscriptionMessage {
  SubscriptionName: string | undefined;
  SourceIdentifier: string | undefined;
}
export interface EventSubscription {
  CustomerAwsId?: string | undefined;
  CustSubscriptionId?: string | undefined;
  SnsTopicArn?: string | undefined;
  Status?: string | undefined;
  SubscriptionCreationTime?: string | undefined;
  SourceType?: string | undefined;
  SourceIdsList?: string[] | undefined;
  EventCategoriesList?: string[] | undefined;
  Enabled?: boolean | undefined;
  EventSubscriptionArn?: string | undefined;
}
export interface AddSourceIdentifierToSubscriptionResult {
  EventSubscription?: EventSubscription | undefined;
}
export declare class SourceNotFoundFault extends __BaseException {
  readonly name: "SourceNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SourceNotFoundFault, __BaseException>
  );
}
export declare class SubscriptionNotFoundFault extends __BaseException {
  readonly name: "SubscriptionNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubscriptionNotFoundFault, __BaseException>
  );
}
export interface Tag {
  Key?: string | undefined;
  Value?: string | undefined;
}
export interface AddTagsToResourceMessage {
  ResourceName: string | undefined;
  Tags: Tag[] | undefined;
}
export declare class DBInstanceNotFoundFault extends __BaseException {
  readonly name: "DBInstanceNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBInstanceNotFoundFault, __BaseException>
  );
}
export declare class DBSnapshotNotFoundFault extends __BaseException {
  readonly name: "DBSnapshotNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBSnapshotNotFoundFault, __BaseException>
  );
}
export interface ApplyPendingMaintenanceActionMessage {
  ResourceIdentifier: string | undefined;
  ApplyAction: string | undefined;
  OptInType: string | undefined;
}
export interface PendingMaintenanceAction {
  Action?: string | undefined;
  AutoAppliedAfterDate?: Date | undefined;
  ForcedApplyDate?: Date | undefined;
  OptInStatus?: string | undefined;
  CurrentApplyDate?: Date | undefined;
  Description?: string | undefined;
}
export interface ResourcePendingMaintenanceActions {
  ResourceIdentifier?: string | undefined;
  PendingMaintenanceActionDetails?: PendingMaintenanceAction[] | undefined;
}
export interface ApplyPendingMaintenanceActionResult {
  ResourcePendingMaintenanceActions?:
    | ResourcePendingMaintenanceActions
    | undefined;
}
export declare class ResourceNotFoundFault extends __BaseException {
  readonly name: "ResourceNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundFault, __BaseException>
  );
}
export interface CopyDBClusterParameterGroupMessage {
  SourceDBClusterParameterGroupIdentifier: string | undefined;
  TargetDBClusterParameterGroupIdentifier: string | undefined;
  TargetDBClusterParameterGroupDescription: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface DBClusterParameterGroup {
  DBClusterParameterGroupName?: string | undefined;
  DBParameterGroupFamily?: string | undefined;
  Description?: string | undefined;
  DBClusterParameterGroupArn?: string | undefined;
}
export interface CopyDBClusterParameterGroupResult {
  DBClusterParameterGroup?: DBClusterParameterGroup | undefined;
}
export declare class DBParameterGroupAlreadyExistsFault extends __BaseException {
  readonly name: "DBParameterGroupAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBParameterGroupAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class DBParameterGroupNotFoundFault extends __BaseException {
  readonly name: "DBParameterGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBParameterGroupNotFoundFault, __BaseException>
  );
}
export declare class DBParameterGroupQuotaExceededFault extends __BaseException {
  readonly name: "DBParameterGroupQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBParameterGroupQuotaExceededFault,
      __BaseException
    >
  );
}
export interface CopyDBClusterSnapshotMessage {
  SourceDBClusterSnapshotIdentifier: string | undefined;
  TargetDBClusterSnapshotIdentifier: string | undefined;
  KmsKeyId?: string | undefined;
  PreSignedUrl?: string | undefined;
  CopyTags?: boolean | undefined;
  Tags?: Tag[] | undefined;
}
export interface DBClusterSnapshot {
  AvailabilityZones?: string[] | undefined;
  DBClusterSnapshotIdentifier?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  SnapshotCreateTime?: Date | undefined;
  Engine?: string | undefined;
  AllocatedStorage?: number | undefined;
  Status?: string | undefined;
  Port?: number | undefined;
  VpcId?: string | undefined;
  ClusterCreateTime?: Date | undefined;
  MasterUsername?: string | undefined;
  EngineVersion?: string | undefined;
  LicenseModel?: string | undefined;
  SnapshotType?: string | undefined;
  PercentProgress?: number | undefined;
  StorageEncrypted?: boolean | undefined;
  KmsKeyId?: string | undefined;
  DBClusterSnapshotArn?: string | undefined;
  SourceDBClusterSnapshotArn?: string | undefined;
  IAMDatabaseAuthenticationEnabled?: boolean | undefined;
  StorageType?: string | undefined;
}
export interface CopyDBClusterSnapshotResult {
  DBClusterSnapshot?: DBClusterSnapshot | undefined;
}
export declare class DBClusterSnapshotAlreadyExistsFault extends __BaseException {
  readonly name: "DBClusterSnapshotAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterSnapshotAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class DBClusterSnapshotNotFoundFault extends __BaseException {
  readonly name: "DBClusterSnapshotNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterSnapshotNotFoundFault, __BaseException>
  );
}
export declare class InvalidDBClusterSnapshotStateFault extends __BaseException {
  readonly name: "InvalidDBClusterSnapshotStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidDBClusterSnapshotStateFault,
      __BaseException
    >
  );
}
export declare class KMSKeyNotAccessibleFault extends __BaseException {
  readonly name: "KMSKeyNotAccessibleFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<KMSKeyNotAccessibleFault, __BaseException>
  );
}
export declare class SnapshotQuotaExceededFault extends __BaseException {
  readonly name: "SnapshotQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SnapshotQuotaExceededFault, __BaseException>
  );
}
export interface CopyDBParameterGroupMessage {
  SourceDBParameterGroupIdentifier: string | undefined;
  TargetDBParameterGroupIdentifier: string | undefined;
  TargetDBParameterGroupDescription: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface DBParameterGroup {
  DBParameterGroupName?: string | undefined;
  DBParameterGroupFamily?: string | undefined;
  Description?: string | undefined;
  DBParameterGroupArn?: string | undefined;
}
export interface CopyDBParameterGroupResult {
  DBParameterGroup?: DBParameterGroup | undefined;
}
export interface ServerlessV2ScalingConfiguration {
  MinCapacity?: number | undefined;
  MaxCapacity?: number | undefined;
}
export interface CreateDBClusterMessage {
  AvailabilityZones?: string[] | undefined;
  BackupRetentionPeriod?: number | undefined;
  CharacterSetName?: string | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  DatabaseName?: string | undefined;
  DBClusterIdentifier: string | undefined;
  DBClusterParameterGroupName?: string | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  DBSubnetGroupName?: string | undefined;
  Engine: string | undefined;
  EngineVersion?: string | undefined;
  Port?: number | undefined;
  MasterUsername?: string | undefined;
  MasterUserPassword?: string | undefined;
  OptionGroupName?: string | undefined;
  PreferredBackupWindow?: string | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  ReplicationSourceIdentifier?: string | undefined;
  Tags?: Tag[] | undefined;
  StorageEncrypted?: boolean | undefined;
  KmsKeyId?: string | undefined;
  PreSignedUrl?: string | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  EnableCloudwatchLogsExports?: string[] | undefined;
  DeletionProtection?: boolean | undefined;
  ServerlessV2ScalingConfiguration?:
    | ServerlessV2ScalingConfiguration
    | undefined;
  GlobalClusterIdentifier?: string | undefined;
  StorageType?: string | undefined;
}
export interface DBClusterRole {
  RoleArn?: string | undefined;
  Status?: string | undefined;
  FeatureName?: string | undefined;
}
export interface DBClusterMember {
  DBInstanceIdentifier?: string | undefined;
  IsClusterWriter?: boolean | undefined;
  DBClusterParameterGroupStatus?: string | undefined;
  PromotionTier?: number | undefined;
}
export interface DBClusterOptionGroupStatus {
  DBClusterOptionGroupName?: string | undefined;
  Status?: string | undefined;
}
export interface PendingCloudwatchLogsExports {
  LogTypesToEnable?: string[] | undefined;
  LogTypesToDisable?: string[] | undefined;
}
export interface ClusterPendingModifiedValues {
  PendingCloudwatchLogsExports?: PendingCloudwatchLogsExports | undefined;
  DBClusterIdentifier?: string | undefined;
  IAMDatabaseAuthenticationEnabled?: boolean | undefined;
  EngineVersion?: string | undefined;
  BackupRetentionPeriod?: number | undefined;
  StorageType?: string | undefined;
  AllocatedStorage?: number | undefined;
  Iops?: number | undefined;
}
export interface ServerlessV2ScalingConfigurationInfo {
  MinCapacity?: number | undefined;
  MaxCapacity?: number | undefined;
}
export interface VpcSecurityGroupMembership {
  VpcSecurityGroupId?: string | undefined;
  Status?: string | undefined;
}
export interface DBCluster {
  AllocatedStorage?: number | undefined;
  AvailabilityZones?: string[] | undefined;
  BackupRetentionPeriod?: number | undefined;
  CharacterSetName?: string | undefined;
  DatabaseName?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  DBClusterParameterGroup?: string | undefined;
  DBSubnetGroup?: string | undefined;
  Status?: string | undefined;
  PercentProgress?: string | undefined;
  EarliestRestorableTime?: Date | undefined;
  Endpoint?: string | undefined;
  ReaderEndpoint?: string | undefined;
  MultiAZ?: boolean | undefined;
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  LatestRestorableTime?: Date | undefined;
  Port?: number | undefined;
  MasterUsername?: string | undefined;
  DBClusterOptionGroupMemberships?: DBClusterOptionGroupStatus[] | undefined;
  PreferredBackupWindow?: string | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  ReplicationSourceIdentifier?: string | undefined;
  ReadReplicaIdentifiers?: string[] | undefined;
  DBClusterMembers?: DBClusterMember[] | undefined;
  VpcSecurityGroups?: VpcSecurityGroupMembership[] | undefined;
  HostedZoneId?: string | undefined;
  StorageEncrypted?: boolean | undefined;
  KmsKeyId?: string | undefined;
  DbClusterResourceId?: string | undefined;
  DBClusterArn?: string | undefined;
  AssociatedRoles?: DBClusterRole[] | undefined;
  IAMDatabaseAuthenticationEnabled?: boolean | undefined;
  CloneGroupId?: string | undefined;
  ClusterCreateTime?: Date | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  EnabledCloudwatchLogsExports?: string[] | undefined;
  PendingModifiedValues?: ClusterPendingModifiedValues | undefined;
  DeletionProtection?: boolean | undefined;
  CrossAccountClone?: boolean | undefined;
  AutomaticRestartTime?: Date | undefined;
  ServerlessV2ScalingConfiguration?:
    | ServerlessV2ScalingConfigurationInfo
    | undefined;
  GlobalClusterIdentifier?: string | undefined;
  IOOptimizedNextAllowedModificationTime?: Date | undefined;
  StorageType?: string | undefined;
}
export interface CreateDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export declare class DBClusterAlreadyExistsFault extends __BaseException {
  readonly name: "DBClusterAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterAlreadyExistsFault, __BaseException>
  );
}
export declare class DBClusterParameterGroupNotFoundFault extends __BaseException {
  readonly name: "DBClusterParameterGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterParameterGroupNotFoundFault,
      __BaseException
    >
  );
}
export declare class DBClusterQuotaExceededFault extends __BaseException {
  readonly name: "DBClusterQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterQuotaExceededFault, __BaseException>
  );
}
export declare class DBSubnetGroupDoesNotCoverEnoughAZs extends __BaseException {
  readonly name: "DBSubnetGroupDoesNotCoverEnoughAZs";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBSubnetGroupDoesNotCoverEnoughAZs,
      __BaseException
    >
  );
}
export declare class DBSubnetGroupNotFoundFault extends __BaseException {
  readonly name: "DBSubnetGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBSubnetGroupNotFoundFault, __BaseException>
  );
}
export declare class GlobalClusterNotFoundFault extends __BaseException {
  readonly name: "GlobalClusterNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<GlobalClusterNotFoundFault, __BaseException>
  );
}
export declare class InsufficientStorageClusterCapacityFault extends __BaseException {
  readonly name: "InsufficientStorageClusterCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientStorageClusterCapacityFault,
      __BaseException
    >
  );
}
export declare class InvalidDBInstanceStateFault extends __BaseException {
  readonly name: "InvalidDBInstanceStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBInstanceStateFault, __BaseException>
  );
}
export declare class InvalidDBSubnetGroupStateFault extends __BaseException {
  readonly name: "InvalidDBSubnetGroupStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBSubnetGroupStateFault, __BaseException>
  );
}
export declare class InvalidGlobalClusterStateFault extends __BaseException {
  readonly name: "InvalidGlobalClusterStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidGlobalClusterStateFault, __BaseException>
  );
}
export declare class InvalidSubnet extends __BaseException {
  readonly name: "InvalidSubnet";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<InvalidSubnet, __BaseException>);
}
export declare class InvalidVPCNetworkStateFault extends __BaseException {
  readonly name: "InvalidVPCNetworkStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidVPCNetworkStateFault, __BaseException>
  );
}
export declare class StorageQuotaExceededFault extends __BaseException {
  readonly name: "StorageQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<StorageQuotaExceededFault, __BaseException>
  );
}
export interface CreateDBClusterEndpointMessage {
  DBClusterIdentifier: string | undefined;
  DBClusterEndpointIdentifier: string | undefined;
  EndpointType: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateDBClusterEndpointOutput {
  DBClusterEndpointIdentifier?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  DBClusterEndpointResourceIdentifier?: string | undefined;
  Endpoint?: string | undefined;
  Status?: string | undefined;
  EndpointType?: string | undefined;
  CustomEndpointType?: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
  DBClusterEndpointArn?: string | undefined;
}
export declare class DBClusterEndpointAlreadyExistsFault extends __BaseException {
  readonly name: "DBClusterEndpointAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterEndpointAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class DBClusterEndpointQuotaExceededFault extends __BaseException {
  readonly name: "DBClusterEndpointQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBClusterEndpointQuotaExceededFault,
      __BaseException
    >
  );
}
export interface CreateDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
  DBParameterGroupFamily: string | undefined;
  Description: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateDBClusterParameterGroupResult {
  DBClusterParameterGroup?: DBClusterParameterGroup | undefined;
}
export interface CreateDBClusterSnapshotMessage {
  DBClusterSnapshotIdentifier: string | undefined;
  DBClusterIdentifier: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateDBClusterSnapshotResult {
  DBClusterSnapshot?: DBClusterSnapshot | undefined;
}
export declare class AuthorizationNotFoundFault extends __BaseException {
  readonly name: "AuthorizationNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<AuthorizationNotFoundFault, __BaseException>
  );
}
export interface CreateDBInstanceMessage {
  DBName?: string | undefined;
  DBInstanceIdentifier: string | undefined;
  AllocatedStorage?: number | undefined;
  DBInstanceClass: string | undefined;
  Engine: string | undefined;
  MasterUsername?: string | undefined;
  MasterUserPassword?: string | undefined;
  DBSecurityGroups?: string[] | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  AvailabilityZone?: string | undefined;
  DBSubnetGroupName?: string | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  DBParameterGroupName?: string | undefined;
  BackupRetentionPeriod?: number | undefined;
  PreferredBackupWindow?: string | undefined;
  Port?: number | undefined;
  MultiAZ?: boolean | undefined;
  EngineVersion?: string | undefined;
  AutoMinorVersionUpgrade?: boolean | undefined;
  LicenseModel?: string | undefined;
  Iops?: number | undefined;
  OptionGroupName?: string | undefined;
  CharacterSetName?: string | undefined;
  PubliclyAccessible?: boolean | undefined;
  Tags?: Tag[] | undefined;
  DBClusterIdentifier: string | undefined;
  StorageType?: string | undefined;
  TdeCredentialArn?: string | undefined;
  TdeCredentialPassword?: string | undefined;
  StorageEncrypted?: boolean | undefined;
  KmsKeyId?: string | undefined;
  Domain?: string | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  MonitoringInterval?: number | undefined;
  MonitoringRoleArn?: string | undefined;
  DomainIAMRoleName?: string | undefined;
  PromotionTier?: number | undefined;
  Timezone?: string | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  EnablePerformanceInsights?: boolean | undefined;
  PerformanceInsightsKMSKeyId?: string | undefined;
  EnableCloudwatchLogsExports?: string[] | undefined;
  DeletionProtection?: boolean | undefined;
}
export interface DBParameterGroupStatus {
  DBParameterGroupName?: string | undefined;
  ParameterApplyStatus?: string | undefined;
}
export interface DBSecurityGroupMembership {
  DBSecurityGroupName?: string | undefined;
  Status?: string | undefined;
}
export interface AvailabilityZone {
  Name?: string | undefined;
}
export interface Subnet {
  SubnetIdentifier?: string | undefined;
  SubnetAvailabilityZone?: AvailabilityZone | undefined;
  SubnetStatus?: string | undefined;
}
export interface DBSubnetGroup {
  DBSubnetGroupName?: string | undefined;
  DBSubnetGroupDescription?: string | undefined;
  VpcId?: string | undefined;
  SubnetGroupStatus?: string | undefined;
  Subnets?: Subnet[] | undefined;
  DBSubnetGroupArn?: string | undefined;
}
export interface DomainMembership {
  Domain?: string | undefined;
  Status?: string | undefined;
  FQDN?: string | undefined;
  IAMRoleName?: string | undefined;
}
export interface Endpoint {
  Address?: string | undefined;
  Port?: number | undefined;
  HostedZoneId?: string | undefined;
}
export interface OptionGroupMembership {
  OptionGroupName?: string | undefined;
  Status?: string | undefined;
}
export interface PendingModifiedValues {
  DBInstanceClass?: string | undefined;
  AllocatedStorage?: number | undefined;
  MasterUserPassword?: string | undefined;
  Port?: number | undefined;
  BackupRetentionPeriod?: number | undefined;
  MultiAZ?: boolean | undefined;
  EngineVersion?: string | undefined;
  LicenseModel?: string | undefined;
  Iops?: number | undefined;
  DBInstanceIdentifier?: string | undefined;
  StorageType?: string | undefined;
  CACertificateIdentifier?: string | undefined;
  DBSubnetGroupName?: string | undefined;
  PendingCloudwatchLogsExports?: PendingCloudwatchLogsExports | undefined;
}
export interface DBInstanceStatusInfo {
  StatusType?: string | undefined;
  Normal?: boolean | undefined;
  Status?: string | undefined;
  Message?: string | undefined;
}
export interface DBInstance {
  DBInstanceIdentifier?: string | undefined;
  DBInstanceClass?: string | undefined;
  Engine?: string | undefined;
  DBInstanceStatus?: string | undefined;
  MasterUsername?: string | undefined;
  DBName?: string | undefined;
  Endpoint?: Endpoint | undefined;
  AllocatedStorage?: number | undefined;
  InstanceCreateTime?: Date | undefined;
  PreferredBackupWindow?: string | undefined;
  BackupRetentionPeriod?: number | undefined;
  DBSecurityGroups?: DBSecurityGroupMembership[] | undefined;
  VpcSecurityGroups?: VpcSecurityGroupMembership[] | undefined;
  DBParameterGroups?: DBParameterGroupStatus[] | undefined;
  AvailabilityZone?: string | undefined;
  DBSubnetGroup?: DBSubnetGroup | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  PendingModifiedValues?: PendingModifiedValues | undefined;
  LatestRestorableTime?: Date | undefined;
  MultiAZ?: boolean | undefined;
  EngineVersion?: string | undefined;
  AutoMinorVersionUpgrade?: boolean | undefined;
  ReadReplicaSourceDBInstanceIdentifier?: string | undefined;
  ReadReplicaDBInstanceIdentifiers?: string[] | undefined;
  ReadReplicaDBClusterIdentifiers?: string[] | undefined;
  LicenseModel?: string | undefined;
  Iops?: number | undefined;
  OptionGroupMemberships?: OptionGroupMembership[] | undefined;
  CharacterSetName?: string | undefined;
  SecondaryAvailabilityZone?: string | undefined;
  PubliclyAccessible?: boolean | undefined;
  StatusInfos?: DBInstanceStatusInfo[] | undefined;
  StorageType?: string | undefined;
  TdeCredentialArn?: string | undefined;
  DbInstancePort?: number | undefined;
  DBClusterIdentifier?: string | undefined;
  StorageEncrypted?: boolean | undefined;
  KmsKeyId?: string | undefined;
  DbiResourceId?: string | undefined;
  CACertificateIdentifier?: string | undefined;
  DomainMemberships?: DomainMembership[] | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  MonitoringInterval?: number | undefined;
  EnhancedMonitoringResourceArn?: string | undefined;
  MonitoringRoleArn?: string | undefined;
  PromotionTier?: number | undefined;
  DBInstanceArn?: string | undefined;
  Timezone?: string | undefined;
  IAMDatabaseAuthenticationEnabled?: boolean | undefined;
  PerformanceInsightsEnabled?: boolean | undefined;
  PerformanceInsightsKMSKeyId?: string | undefined;
  EnabledCloudwatchLogsExports?: string[] | undefined;
  DeletionProtection?: boolean | undefined;
}
export interface CreateDBInstanceResult {
  DBInstance?: DBInstance | undefined;
}
export declare class DBInstanceAlreadyExistsFault extends __BaseException {
  readonly name: "DBInstanceAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBInstanceAlreadyExistsFault, __BaseException>
  );
}
export declare class DBSecurityGroupNotFoundFault extends __BaseException {
  readonly name: "DBSecurityGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBSecurityGroupNotFoundFault, __BaseException>
  );
}
export declare class DomainNotFoundFault extends __BaseException {
  readonly name: "DomainNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DomainNotFoundFault, __BaseException>
  );
}
export declare class InstanceQuotaExceededFault extends __BaseException {
  readonly name: "InstanceQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InstanceQuotaExceededFault, __BaseException>
  );
}
export declare class InsufficientDBInstanceCapacityFault extends __BaseException {
  readonly name: "InsufficientDBInstanceCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientDBInstanceCapacityFault,
      __BaseException
    >
  );
}
export declare class OptionGroupNotFoundFault extends __BaseException {
  readonly name: "OptionGroupNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<OptionGroupNotFoundFault, __BaseException>
  );
}
export declare class ProvisionedIopsNotAvailableInAZFault extends __BaseException {
  readonly name: "ProvisionedIopsNotAvailableInAZFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      ProvisionedIopsNotAvailableInAZFault,
      __BaseException
    >
  );
}
export declare class StorageTypeNotSupportedFault extends __BaseException {
  readonly name: "StorageTypeNotSupportedFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<StorageTypeNotSupportedFault, __BaseException>
  );
}
export interface CreateDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
  DBParameterGroupFamily: string | undefined;
  Description: string | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateDBParameterGroupResult {
  DBParameterGroup?: DBParameterGroup | undefined;
}
export interface CreateDBSubnetGroupMessage {
  DBSubnetGroupName: string | undefined;
  DBSubnetGroupDescription: string | undefined;
  SubnetIds: string[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateDBSubnetGroupResult {
  DBSubnetGroup?: DBSubnetGroup | undefined;
}
export declare class DBSubnetGroupAlreadyExistsFault extends __BaseException {
  readonly name: "DBSubnetGroupAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBSubnetGroupAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class DBSubnetGroupQuotaExceededFault extends __BaseException {
  readonly name: "DBSubnetGroupQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBSubnetGroupQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class DBSubnetQuotaExceededFault extends __BaseException {
  readonly name: "DBSubnetQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBSubnetQuotaExceededFault, __BaseException>
  );
}
export interface CreateEventSubscriptionMessage {
  SubscriptionName: string | undefined;
  SnsTopicArn: string | undefined;
  SourceType?: string | undefined;
  EventCategories?: string[] | undefined;
  SourceIds?: string[] | undefined;
  Enabled?: boolean | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateEventSubscriptionResult {
  EventSubscription?: EventSubscription | undefined;
}
export declare class EventSubscriptionQuotaExceededFault extends __BaseException {
  readonly name: "EventSubscriptionQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      EventSubscriptionQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class SNSInvalidTopicFault extends __BaseException {
  readonly name: "SNSInvalidTopicFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SNSInvalidTopicFault, __BaseException>
  );
}
export declare class SNSNoAuthorizationFault extends __BaseException {
  readonly name: "SNSNoAuthorizationFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SNSNoAuthorizationFault, __BaseException>
  );
}
export declare class SNSTopicArnNotFoundFault extends __BaseException {
  readonly name: "SNSTopicArnNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SNSTopicArnNotFoundFault, __BaseException>
  );
}
export declare class SubscriptionAlreadyExistFault extends __BaseException {
  readonly name: "SubscriptionAlreadyExistFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<SubscriptionAlreadyExistFault, __BaseException>
  );
}
export declare class SubscriptionCategoryNotFoundFault extends __BaseException {
  readonly name: "SubscriptionCategoryNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SubscriptionCategoryNotFoundFault,
      __BaseException
    >
  );
}
export interface CreateGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  SourceDBClusterIdentifier?: string | undefined;
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DeletionProtection?: boolean | undefined;
  StorageEncrypted?: boolean | undefined;
}
export declare const FailoverStatus: {
  readonly CANCELLING: "cancelling";
  readonly FAILING_OVER: "failing-over";
  readonly PENDING: "pending";
};
export type FailoverStatus =
  (typeof FailoverStatus)[keyof typeof FailoverStatus];
export interface FailoverState {
  Status?: FailoverStatus | undefined;
  FromDbClusterArn?: string | undefined;
  ToDbClusterArn?: string | undefined;
  IsDataLossAllowed?: boolean | undefined;
}
export interface GlobalClusterMember {
  DBClusterArn?: string | undefined;
  Readers?: string[] | undefined;
  IsWriter?: boolean | undefined;
}
export interface GlobalCluster {
  GlobalClusterIdentifier?: string | undefined;
  GlobalClusterResourceId?: string | undefined;
  GlobalClusterArn?: string | undefined;
  Status?: string | undefined;
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  StorageEncrypted?: boolean | undefined;
  DeletionProtection?: boolean | undefined;
  GlobalClusterMembers?: GlobalClusterMember[] | undefined;
  FailoverState?: FailoverState | undefined;
}
export interface CreateGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export declare class GlobalClusterAlreadyExistsFault extends __BaseException {
  readonly name: "GlobalClusterAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      GlobalClusterAlreadyExistsFault,
      __BaseException
    >
  );
}
export declare class GlobalClusterQuotaExceededFault extends __BaseException {
  readonly name: "GlobalClusterQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      GlobalClusterQuotaExceededFault,
      __BaseException
    >
  );
}
export interface DeleteDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  SkipFinalSnapshot?: boolean | undefined;
  FinalDBSnapshotIdentifier?: string | undefined;
}
export interface DeleteDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export declare class DBClusterEndpointNotFoundFault extends __BaseException {
  readonly name: "DBClusterEndpointNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterEndpointNotFoundFault, __BaseException>
  );
}
export interface DeleteDBClusterEndpointMessage {
  DBClusterEndpointIdentifier: string | undefined;
}
export interface DeleteDBClusterEndpointOutput {
  DBClusterEndpointIdentifier?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  DBClusterEndpointResourceIdentifier?: string | undefined;
  Endpoint?: string | undefined;
  Status?: string | undefined;
  EndpointType?: string | undefined;
  CustomEndpointType?: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
  DBClusterEndpointArn?: string | undefined;
}
export declare class InvalidDBClusterEndpointStateFault extends __BaseException {
  readonly name: "InvalidDBClusterEndpointStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidDBClusterEndpointStateFault,
      __BaseException
    >
  );
}
export interface DeleteDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
}
export declare class InvalidDBParameterGroupStateFault extends __BaseException {
  readonly name: "InvalidDBParameterGroupStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidDBParameterGroupStateFault,
      __BaseException
    >
  );
}
export interface DeleteDBClusterSnapshotMessage {
  DBClusterSnapshotIdentifier: string | undefined;
}
export interface DeleteDBClusterSnapshotResult {
  DBClusterSnapshot?: DBClusterSnapshot | undefined;
}
export declare class DBSnapshotAlreadyExistsFault extends __BaseException {
  readonly name: "DBSnapshotAlreadyExistsFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBSnapshotAlreadyExistsFault, __BaseException>
  );
}
export interface DeleteDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  SkipFinalSnapshot?: boolean | undefined;
  FinalDBSnapshotIdentifier?: string | undefined;
}
export interface DeleteDBInstanceResult {
  DBInstance?: DBInstance | undefined;
}
export interface DeleteDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
}
export interface DeleteDBSubnetGroupMessage {
  DBSubnetGroupName: string | undefined;
}
export declare class InvalidDBSubnetStateFault extends __BaseException {
  readonly name: "InvalidDBSubnetStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBSubnetStateFault, __BaseException>
  );
}
export interface DeleteEventSubscriptionMessage {
  SubscriptionName: string | undefined;
}
export interface DeleteEventSubscriptionResult {
  EventSubscription?: EventSubscription | undefined;
}
export declare class InvalidEventSubscriptionStateFault extends __BaseException {
  readonly name: "InvalidEventSubscriptionStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidEventSubscriptionStateFault,
      __BaseException
    >
  );
}
export interface DeleteGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
}
export interface DeleteGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export interface DBClusterEndpoint {
  DBClusterEndpointIdentifier?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  DBClusterEndpointResourceIdentifier?: string | undefined;
  Endpoint?: string | undefined;
  Status?: string | undefined;
  EndpointType?: string | undefined;
  CustomEndpointType?: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
  DBClusterEndpointArn?: string | undefined;
}
export interface DBClusterEndpointMessage {
  Marker?: string | undefined;
  DBClusterEndpoints?: DBClusterEndpoint[] | undefined;
}
export interface Filter {
  Name: string | undefined;
  Values: string[] | undefined;
}
export interface DescribeDBClusterEndpointsMessage {
  DBClusterIdentifier?: string | undefined;
  DBClusterEndpointIdentifier?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DBClusterParameterGroupsMessage {
  Marker?: string | undefined;
  DBClusterParameterGroups?: DBClusterParameterGroup[] | undefined;
}
export interface DescribeDBClusterParameterGroupsMessage {
  DBClusterParameterGroupName?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export declare const ApplyMethod: {
  readonly immediate: "immediate";
  readonly pending_reboot: "pending-reboot";
};
export type ApplyMethod = (typeof ApplyMethod)[keyof typeof ApplyMethod];
export interface Parameter {
  ParameterName?: string | undefined;
  ParameterValue?: string | undefined;
  Description?: string | undefined;
  Source?: string | undefined;
  ApplyType?: string | undefined;
  DataType?: string | undefined;
  AllowedValues?: string | undefined;
  IsModifiable?: boolean | undefined;
  MinimumEngineVersion?: string | undefined;
  ApplyMethod?: ApplyMethod | undefined;
}
export interface DBClusterParameterGroupDetails {
  Parameters?: Parameter[] | undefined;
  Marker?: string | undefined;
}
export interface DescribeDBClusterParametersMessage {
  DBClusterParameterGroupName: string | undefined;
  Source?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DBClusterMessage {
  Marker?: string | undefined;
  DBClusters?: DBCluster[] | undefined;
}
export interface DescribeDBClustersMessage {
  DBClusterIdentifier?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DescribeDBClusterSnapshotAttributesMessage {
  DBClusterSnapshotIdentifier: string | undefined;
}
export interface DBClusterSnapshotAttribute {
  AttributeName?: string | undefined;
  AttributeValues?: string[] | undefined;
}
export interface DBClusterSnapshotAttributesResult {
  DBClusterSnapshotIdentifier?: string | undefined;
  DBClusterSnapshotAttributes?: DBClusterSnapshotAttribute[] | undefined;
}
export interface DescribeDBClusterSnapshotAttributesResult {
  DBClusterSnapshotAttributesResult?:
    | DBClusterSnapshotAttributesResult
    | undefined;
}
export interface DBClusterSnapshotMessage {
  Marker?: string | undefined;
  DBClusterSnapshots?: DBClusterSnapshot[] | undefined;
}
export interface DescribeDBClusterSnapshotsMessage {
  DBClusterIdentifier?: string | undefined;
  DBClusterSnapshotIdentifier?: string | undefined;
  SnapshotType?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
  IncludeShared?: boolean | undefined;
  IncludePublic?: boolean | undefined;
}
export interface CharacterSet {
  CharacterSetName?: string | undefined;
  CharacterSetDescription?: string | undefined;
}
export interface Timezone {
  TimezoneName?: string | undefined;
}
export interface UpgradeTarget {
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  Description?: string | undefined;
  AutoUpgrade?: boolean | undefined;
  IsMajorVersionUpgrade?: boolean | undefined;
  SupportsGlobalDatabases?: boolean | undefined;
}
export interface DBEngineVersion {
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DBParameterGroupFamily?: string | undefined;
  DBEngineDescription?: string | undefined;
  DBEngineVersionDescription?: string | undefined;
  DefaultCharacterSet?: CharacterSet | undefined;
  SupportedCharacterSets?: CharacterSet[] | undefined;
  ValidUpgradeTarget?: UpgradeTarget[] | undefined;
  SupportedTimezones?: Timezone[] | undefined;
  ExportableLogTypes?: string[] | undefined;
  SupportsLogExportsToCloudwatchLogs?: boolean | undefined;
  SupportsReadReplica?: boolean | undefined;
  SupportsGlobalDatabases?: boolean | undefined;
}
export interface DBEngineVersionMessage {
  Marker?: string | undefined;
  DBEngineVersions?: DBEngineVersion[] | undefined;
}
export interface DescribeDBEngineVersionsMessage {
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DBParameterGroupFamily?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
  DefaultOnly?: boolean | undefined;
  ListSupportedCharacterSets?: boolean | undefined;
  ListSupportedTimezones?: boolean | undefined;
}
export interface DBInstanceMessage {
  Marker?: string | undefined;
  DBInstances?: DBInstance[] | undefined;
}
export interface DescribeDBInstancesMessage {
  DBInstanceIdentifier?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DBParameterGroupsMessage {
  Marker?: string | undefined;
  DBParameterGroups?: DBParameterGroup[] | undefined;
}
export interface DescribeDBParameterGroupsMessage {
  DBParameterGroupName?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DBParameterGroupDetails {
  Parameters?: Parameter[] | undefined;
  Marker?: string | undefined;
}
export interface DescribeDBParametersMessage {
  DBParameterGroupName: string | undefined;
  Source?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DBSubnetGroupMessage {
  Marker?: string | undefined;
  DBSubnetGroups?: DBSubnetGroup[] | undefined;
}
export interface DescribeDBSubnetGroupsMessage {
  DBSubnetGroupName?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DescribeEngineDefaultClusterParametersMessage {
  DBParameterGroupFamily: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface EngineDefaults {
  DBParameterGroupFamily?: string | undefined;
  Marker?: string | undefined;
  Parameters?: Parameter[] | undefined;
}
export interface DescribeEngineDefaultClusterParametersResult {
  EngineDefaults?: EngineDefaults | undefined;
}
export interface DescribeEngineDefaultParametersMessage {
  DBParameterGroupFamily: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface DescribeEngineDefaultParametersResult {
  EngineDefaults?: EngineDefaults | undefined;
}
export interface DescribeEventCategoriesMessage {
  SourceType?: string | undefined;
  Filters?: Filter[] | undefined;
}
export interface EventCategoriesMap {
  SourceType?: string | undefined;
  EventCategories?: string[] | undefined;
}
export interface EventCategoriesMessage {
  EventCategoriesMapList?: EventCategoriesMap[] | undefined;
}
export declare const SourceType: {
  readonly db_cluster: "db-cluster";
  readonly db_cluster_snapshot: "db-cluster-snapshot";
  readonly db_instance: "db-instance";
  readonly db_parameter_group: "db-parameter-group";
  readonly db_security_group: "db-security-group";
  readonly db_snapshot: "db-snapshot";
};
export type SourceType = (typeof SourceType)[keyof typeof SourceType];
export interface DescribeEventsMessage {
  SourceIdentifier?: string | undefined;
  SourceType?: SourceType | undefined;
  StartTime?: Date | undefined;
  EndTime?: Date | undefined;
  Duration?: number | undefined;
  EventCategories?: string[] | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface Event {
  SourceIdentifier?: string | undefined;
  SourceType?: SourceType | undefined;
  Message?: string | undefined;
  EventCategories?: string[] | undefined;
  Date?: Date | undefined;
  SourceArn?: string | undefined;
}
export interface EventsMessage {
  Marker?: string | undefined;
  Events?: Event[] | undefined;
}
export interface DescribeEventSubscriptionsMessage {
  SubscriptionName?: string | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface EventSubscriptionsMessage {
  Marker?: string | undefined;
  EventSubscriptionsList?: EventSubscription[] | undefined;
}
export interface DescribeGlobalClustersMessage {
  GlobalClusterIdentifier?: string | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface GlobalClustersMessage {
  Marker?: string | undefined;
  GlobalClusters?: GlobalCluster[] | undefined;
}
export interface DescribeOrderableDBInstanceOptionsMessage {
  Engine: string | undefined;
  EngineVersion?: string | undefined;
  DBInstanceClass?: string | undefined;
  LicenseModel?: string | undefined;
  Vpc?: boolean | undefined;
  Filters?: Filter[] | undefined;
  MaxRecords?: number | undefined;
  Marker?: string | undefined;
}
export interface OrderableDBInstanceOption {
  Engine?: string | undefined;
  EngineVersion?: string | undefined;
  DBInstanceClass?: string | undefined;
  LicenseModel?: string | undefined;
  AvailabilityZones?: AvailabilityZone[] | undefined;
  MultiAZCapable?: boolean | undefined;
  ReadReplicaCapable?: boolean | undefined;
  Vpc?: boolean | undefined;
  SupportsStorageEncryption?: boolean | undefined;
  StorageType?: string | undefined;
  SupportsIops?: boolean | undefined;
  SupportsEnhancedMonitoring?: boolean | undefined;
  SupportsIAMDatabaseAuthentication?: boolean | undefined;
  SupportsPerformanceInsights?: boolean | undefined;
  MinStorageSize?: number | undefined;
  MaxStorageSize?: number | undefined;
  MinIopsPerDbInstance?: number | undefined;
  MaxIopsPerDbInstance?: number | undefined;
  MinIopsPerGib?: number | undefined;
  MaxIopsPerGib?: number | undefined;
  SupportsGlobalDatabases?: boolean | undefined;
}
export interface OrderableDBInstanceOptionsMessage {
  OrderableDBInstanceOptions?: OrderableDBInstanceOption[] | undefined;
  Marker?: string | undefined;
}
export interface DescribePendingMaintenanceActionsMessage {
  ResourceIdentifier?: string | undefined;
  Filters?: Filter[] | undefined;
  Marker?: string | undefined;
  MaxRecords?: number | undefined;
}
export interface PendingMaintenanceActionsMessage {
  PendingMaintenanceActions?: ResourcePendingMaintenanceActions[] | undefined;
  Marker?: string | undefined;
}
export interface DescribeValidDBInstanceModificationsMessage {
  DBInstanceIdentifier: string | undefined;
}
export interface DoubleRange {
  From?: number | undefined;
  To?: number | undefined;
}
export interface Range {
  From?: number | undefined;
  To?: number | undefined;
  Step?: number | undefined;
}
export interface ValidStorageOptions {
  StorageType?: string | undefined;
  StorageSize?: Range[] | undefined;
  ProvisionedIops?: Range[] | undefined;
  IopsToStorageRatio?: DoubleRange[] | undefined;
}
export interface ValidDBInstanceModificationsMessage {
  Storage?: ValidStorageOptions[] | undefined;
}
export interface DescribeValidDBInstanceModificationsResult {
  ValidDBInstanceModificationsMessage?:
    | ValidDBInstanceModificationsMessage
    | undefined;
}
export interface FailoverDBClusterMessage {
  DBClusterIdentifier?: string | undefined;
  TargetDBInstanceIdentifier?: string | undefined;
}
export interface FailoverDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export interface FailoverGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  TargetDbClusterIdentifier: string | undefined;
  AllowDataLoss?: boolean | undefined;
  Switchover?: boolean | undefined;
}
export interface FailoverGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export interface ListTagsForResourceMessage {
  ResourceName: string | undefined;
  Filters?: Filter[] | undefined;
}
export interface TagListMessage {
  TagList?: Tag[] | undefined;
}
export declare class InvalidDBSecurityGroupStateFault extends __BaseException {
  readonly name: "InvalidDBSecurityGroupStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InvalidDBSecurityGroupStateFault,
      __BaseException
    >
  );
}
export interface CloudwatchLogsExportConfiguration {
  EnableLogTypes?: string[] | undefined;
  DisableLogTypes?: string[] | undefined;
}
export interface ModifyDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  NewDBClusterIdentifier?: string | undefined;
  ApplyImmediately?: boolean | undefined;
  BackupRetentionPeriod?: number | undefined;
  DBClusterParameterGroupName?: string | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  Port?: number | undefined;
  MasterUserPassword?: string | undefined;
  OptionGroupName?: string | undefined;
  PreferredBackupWindow?: string | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  CloudwatchLogsExportConfiguration?:
    | CloudwatchLogsExportConfiguration
    | undefined;
  EngineVersion?: string | undefined;
  AllowMajorVersionUpgrade?: boolean | undefined;
  DBInstanceParameterGroupName?: string | undefined;
  DeletionProtection?: boolean | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  ServerlessV2ScalingConfiguration?:
    | ServerlessV2ScalingConfiguration
    | undefined;
  StorageType?: string | undefined;
}
export interface ModifyDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export interface ModifyDBClusterEndpointMessage {
  DBClusterEndpointIdentifier: string | undefined;
  EndpointType?: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
}
export interface ModifyDBClusterEndpointOutput {
  DBClusterEndpointIdentifier?: string | undefined;
  DBClusterIdentifier?: string | undefined;
  DBClusterEndpointResourceIdentifier?: string | undefined;
  Endpoint?: string | undefined;
  Status?: string | undefined;
  EndpointType?: string | undefined;
  CustomEndpointType?: string | undefined;
  StaticMembers?: string[] | undefined;
  ExcludedMembers?: string[] | undefined;
  DBClusterEndpointArn?: string | undefined;
}
export interface DBClusterParameterGroupNameMessage {
  DBClusterParameterGroupName?: string | undefined;
}
export interface ModifyDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
  Parameters: Parameter[] | undefined;
}
export interface ModifyDBClusterSnapshotAttributeMessage {
  DBClusterSnapshotIdentifier: string | undefined;
  AttributeName: string | undefined;
  ValuesToAdd?: string[] | undefined;
  ValuesToRemove?: string[] | undefined;
}
export interface ModifyDBClusterSnapshotAttributeResult {
  DBClusterSnapshotAttributesResult?:
    | DBClusterSnapshotAttributesResult
    | undefined;
}
export declare class SharedSnapshotQuotaExceededFault extends __BaseException {
  readonly name: "SharedSnapshotQuotaExceededFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      SharedSnapshotQuotaExceededFault,
      __BaseException
    >
  );
}
export declare class CertificateNotFoundFault extends __BaseException {
  readonly name: "CertificateNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<CertificateNotFoundFault, __BaseException>
  );
}
export declare class DBUpgradeDependencyFailureFault extends __BaseException {
  readonly name: "DBUpgradeDependencyFailureFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      DBUpgradeDependencyFailureFault,
      __BaseException
    >
  );
}
export interface ModifyDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  AllocatedStorage?: number | undefined;
  DBInstanceClass?: string | undefined;
  DBSubnetGroupName?: string | undefined;
  DBSecurityGroups?: string[] | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  ApplyImmediately?: boolean | undefined;
  MasterUserPassword?: string | undefined;
  DBParameterGroupName?: string | undefined;
  BackupRetentionPeriod?: number | undefined;
  PreferredBackupWindow?: string | undefined;
  PreferredMaintenanceWindow?: string | undefined;
  MultiAZ?: boolean | undefined;
  EngineVersion?: string | undefined;
  AllowMajorVersionUpgrade?: boolean | undefined;
  AutoMinorVersionUpgrade?: boolean | undefined;
  LicenseModel?: string | undefined;
  Iops?: number | undefined;
  OptionGroupName?: string | undefined;
  NewDBInstanceIdentifier?: string | undefined;
  StorageType?: string | undefined;
  TdeCredentialArn?: string | undefined;
  TdeCredentialPassword?: string | undefined;
  CACertificateIdentifier?: string | undefined;
  Domain?: string | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  MonitoringInterval?: number | undefined;
  DBPortNumber?: number | undefined;
  PubliclyAccessible?: boolean | undefined;
  MonitoringRoleArn?: string | undefined;
  DomainIAMRoleName?: string | undefined;
  PromotionTier?: number | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  EnablePerformanceInsights?: boolean | undefined;
  PerformanceInsightsKMSKeyId?: string | undefined;
  CloudwatchLogsExportConfiguration?:
    | CloudwatchLogsExportConfiguration
    | undefined;
  DeletionProtection?: boolean | undefined;
}
export interface ModifyDBInstanceResult {
  DBInstance?: DBInstance | undefined;
}
export interface DBParameterGroupNameMessage {
  DBParameterGroupName?: string | undefined;
}
export interface ModifyDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
  Parameters: Parameter[] | undefined;
}
export interface ModifyDBSubnetGroupMessage {
  DBSubnetGroupName: string | undefined;
  DBSubnetGroupDescription?: string | undefined;
  SubnetIds: string[] | undefined;
}
export interface ModifyDBSubnetGroupResult {
  DBSubnetGroup?: DBSubnetGroup | undefined;
}
export declare class SubnetAlreadyInUse extends __BaseException {
  readonly name: "SubnetAlreadyInUse";
  readonly $fault: "client";
  constructor(opts: __ExceptionOptionType<SubnetAlreadyInUse, __BaseException>);
}
export interface ModifyEventSubscriptionMessage {
  SubscriptionName: string | undefined;
  SnsTopicArn?: string | undefined;
  SourceType?: string | undefined;
  EventCategories?: string[] | undefined;
  Enabled?: boolean | undefined;
}
export interface ModifyEventSubscriptionResult {
  EventSubscription?: EventSubscription | undefined;
}
export interface ModifyGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  NewGlobalClusterIdentifier?: string | undefined;
  DeletionProtection?: boolean | undefined;
  EngineVersion?: string | undefined;
  AllowMajorVersionUpgrade?: boolean | undefined;
}
export interface ModifyGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export interface PromoteReadReplicaDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface PromoteReadReplicaDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export interface RebootDBInstanceMessage {
  DBInstanceIdentifier: string | undefined;
  ForceFailover?: boolean | undefined;
}
export interface RebootDBInstanceResult {
  DBInstance?: DBInstance | undefined;
}
export interface RemoveFromGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  DbClusterIdentifier: string | undefined;
}
export interface RemoveFromGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export declare class DBClusterRoleNotFoundFault extends __BaseException {
  readonly name: "DBClusterRoleNotFoundFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<DBClusterRoleNotFoundFault, __BaseException>
  );
}
export interface RemoveRoleFromDBClusterMessage {
  DBClusterIdentifier: string | undefined;
  RoleArn: string | undefined;
  FeatureName?: string | undefined;
}
export interface RemoveSourceIdentifierFromSubscriptionMessage {
  SubscriptionName: string | undefined;
  SourceIdentifier: string | undefined;
}
export interface RemoveSourceIdentifierFromSubscriptionResult {
  EventSubscription?: EventSubscription | undefined;
}
export interface RemoveTagsFromResourceMessage {
  ResourceName: string | undefined;
  TagKeys: string[] | undefined;
}
export interface ResetDBClusterParameterGroupMessage {
  DBClusterParameterGroupName: string | undefined;
  ResetAllParameters?: boolean | undefined;
  Parameters?: Parameter[] | undefined;
}
export interface ResetDBParameterGroupMessage {
  DBParameterGroupName: string | undefined;
  ResetAllParameters?: boolean | undefined;
  Parameters?: Parameter[] | undefined;
}
export declare class InsufficientDBClusterCapacityFault extends __BaseException {
  readonly name: "InsufficientDBClusterCapacityFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<
      InsufficientDBClusterCapacityFault,
      __BaseException
    >
  );
}
export declare class InvalidDBSnapshotStateFault extends __BaseException {
  readonly name: "InvalidDBSnapshotStateFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidDBSnapshotStateFault, __BaseException>
  );
}
export declare class InvalidRestoreFault extends __BaseException {
  readonly name: "InvalidRestoreFault";
  readonly $fault: "client";
  constructor(
    opts: __ExceptionOptionType<InvalidRestoreFault, __BaseException>
  );
}
export interface RestoreDBClusterFromSnapshotMessage {
  AvailabilityZones?: string[] | undefined;
  DBClusterIdentifier: string | undefined;
  SnapshotIdentifier: string | undefined;
  Engine: string | undefined;
  EngineVersion?: string | undefined;
  Port?: number | undefined;
  DBSubnetGroupName?: string | undefined;
  DatabaseName?: string | undefined;
  OptionGroupName?: string | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  Tags?: Tag[] | undefined;
  KmsKeyId?: string | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  EnableCloudwatchLogsExports?: string[] | undefined;
  DBClusterParameterGroupName?: string | undefined;
  DeletionProtection?: boolean | undefined;
  CopyTagsToSnapshot?: boolean | undefined;
  ServerlessV2ScalingConfiguration?:
    | ServerlessV2ScalingConfiguration
    | undefined;
  StorageType?: string | undefined;
}
export interface RestoreDBClusterFromSnapshotResult {
  DBCluster?: DBCluster | undefined;
}
export interface RestoreDBClusterToPointInTimeMessage {
  DBClusterIdentifier: string | undefined;
  RestoreType?: string | undefined;
  SourceDBClusterIdentifier: string | undefined;
  RestoreToTime?: Date | undefined;
  UseLatestRestorableTime?: boolean | undefined;
  Port?: number | undefined;
  DBSubnetGroupName?: string | undefined;
  OptionGroupName?: string | undefined;
  VpcSecurityGroupIds?: string[] | undefined;
  Tags?: Tag[] | undefined;
  KmsKeyId?: string | undefined;
  EnableIAMDatabaseAuthentication?: boolean | undefined;
  EnableCloudwatchLogsExports?: string[] | undefined;
  DBClusterParameterGroupName?: string | undefined;
  DeletionProtection?: boolean | undefined;
  ServerlessV2ScalingConfiguration?:
    | ServerlessV2ScalingConfiguration
    | undefined;
  StorageType?: string | undefined;
}
export interface RestoreDBClusterToPointInTimeResult {
  DBCluster?: DBCluster | undefined;
}
export interface StartDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface StartDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export interface StopDBClusterMessage {
  DBClusterIdentifier: string | undefined;
}
export interface StopDBClusterResult {
  DBCluster?: DBCluster | undefined;
}
export interface SwitchoverGlobalClusterMessage {
  GlobalClusterIdentifier: string | undefined;
  TargetDbClusterIdentifier: string | undefined;
}
export interface SwitchoverGlobalClusterResult {
  GlobalCluster?: GlobalCluster | undefined;
}
export declare const CreateDBInstanceMessageFilterSensitiveLog: (
  obj: CreateDBInstanceMessage
) => any;
export declare const ModifyDBInstanceMessageFilterSensitiveLog: (
  obj: ModifyDBInstanceMessage
) => any;
